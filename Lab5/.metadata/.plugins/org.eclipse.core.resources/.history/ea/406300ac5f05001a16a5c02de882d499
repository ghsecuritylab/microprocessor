#include "stm32l476xx.h"
extern void GPIO_init();
extern void max7219_init();
extern void max7219_send(unsigned char address, unsigned char data);

#define X0 0b0000000000000001
#define X1 0b0000000000000010
#define X2 0b0000000000000100
#define X3 0b0000000000001000
#define Y0 0b0000000001000000
#define Y1 0b0000000000100000
#define Y2 0b0000000000010000
#define Y3 0b0000000000001000

unsigned int x_pin = {X0, X1, X2, X3};
unsigned int y_pin = {Y0, Y1, Y2, Y3};

int display(int data, int num_digs)
{
	int i;
	for (i = 1; i <= num_digs; i++)
	{
		max7219_send(i , data % 10);
		data /= 10;
	}
	for (i = num_digs ; i <= 8; i++)
		max7219_send(i, 15);
	return (data > 99999999) ? -1 : 0;
}
/* TODO: initial keypad gpio pin, X as output and Y as input */
void keypad_init()
{
	RCC->AHB2ENR   |= 0b110;

	GPIOC->MODER   &= 0b11111111111111111111111100000000;
	GPIOC->MODER   |= 0b00000000000000000000000001010101;
	GPIOC->PUPDR   &= 0b11111111111111111111111100000000;
	GPIOC->PUPDR   |= 0b00000000000000000000000001010101;
	GPIOC->OSPEEDR &= 0b11111111111111111111111100000000;
	GPIOC->OSPEEDR |= 0b00000000000000000000000001010101;
	GPIOC->ODR     |= 0b00000000000000000000000000001111;

	GPIOB->MODER   &= 0b11111111111111111100000000111111;
	GPIOB->PUPDR   &= 0b11111111111111111100000000111111;
	GPIOB->PUPDR   |= 0b00000000000000000010101010000000;
	GPIOB->OSPEEDR &= 0b11111111111111111111111100000000;
	GPIOB->OSPEEDR |= 0b00000000000000000000000001010101;
}

/* TODO: scan keypad value
return:
 >=0: key pressedvalue
 -1: no keypress
*/
signed char keypad_scan()
{
	GPIOC->BSRR = x_pin[0];
	GPIOC->BRR  = 0b0000000000000010;
	GPIOC->BRR  = 0b0000000000000100;
	GPIOC->BRR  = 0b0000000000001000;

	if (GPIOB->IDR & 0b0000000001000000)
		return 15;
	if (GPIOB->IDR & 0b0000000000100000)
		return 7;
	if (GPIOB->IDR & 0b0000000000010000)
		return 4;
	if (GPIOB->IDR & 0b0000000000001000)
		return 1;

	GPIOC->BRR  = x_pin[0];
	GPIOC->BSRR = 0b0000000000000010;
	GPIOC->BRR  = 0b0000000000000100;
	GPIOC->BRR  = 0b0000000000001000;

	if (GPIOB->IDR & 0b0000000001000000)
		return 0;
	if (GPIOB->IDR & 0b0000000000100000)
		return 8;
	if (GPIOB->IDR & 0b0000000000010000)
		return 5;
	if (GPIOB->IDR & 0b0000000000001000)
		return 2;

	GPIOC->BRR  = x_pin[0];
	GPIOC->BRR  = 0b0000000000000010;
	GPIOC->BSRR = 0b0000000000000100;
	GPIOC->BRR  = 0b0000000000001000;

	if (GPIOB->IDR & 0b0000000001000000)
		return 14;
	if (GPIOB->IDR & 0b0000000000100000)
		return 9;
	if (GPIOB->IDR & 0b0000000000010000)
		return 6;
	if (GPIOB->IDR & 0b0000000000001000)
		return 3;

	GPIOC->BRR  = x_pin[0];
	GPIOC->BRR  = 0b0000000000000010;
	GPIOC->BRR  = 0b0000000000000100;
	GPIOC->BSRR = 0b0000000000001000;

	if (GPIOB->IDR & 0b0000000001000000)
		return 13;
	if (GPIOB->IDR & 0b0000000000100000)
		return 12;
	if (GPIOB->IDR & 0b0000000000010000)
		return 11;
	if (GPIOB->IDR & 0b0000000000001000)
		return 10;

	return -1;
}

int main()
{
	GPIO_init();
	max7219_init();
	keypad_init();
	while (1)
	{
		int input = keypad_scan();
		if (input >= 10)
			display(input, 2);
		else if (input >= 0)
			display(input, 1);
		else
			display(input, 0);
	}
}
