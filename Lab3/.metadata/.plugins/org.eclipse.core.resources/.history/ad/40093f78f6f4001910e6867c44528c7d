	.syntax unified
	.cpu cortex-m4
	.thumb
.data
	leds: .byte 0
	password .byte 0b1100
.text
	.global main
	.equ RCC_AHB2ENR, 0x4002104C
	.equ GPIOB_MODER, 0x48000400
	.equ GPIOB_OTYPER, 0x48000404
	.equ GPIOB_OSPEEDR, 0x48000408
	.equ GPIOB_PUPDR, 0x4800040C
	.equ GPIOB_ODR, 0x48000414
	.equ GPIOC_MODER, 0x48000800
	.equ GPIOC_PUDPR, 0x4800080c
	.equ GPIOC_IDR, 0x48000810
	.equ time, 2000000
main:
	bl GPIO_init
	bl Delay
	// set the current leds condition
	movs r1, 0b00001100
	ldr r0, =leds
	str r1, [r0]
	// r7 for block or not, block is 1, so default is 0
	movs r7, 0
	B Loop
GPIO_init:
	//TODO: Initial LED GPIO pins as output
	// Enable AHB2 clock to control GPIOB(2)
	movs r0, 0b110
	ldr r1, =RCC_AHB2ENR
	str r0, [r1]
	// set PB3, PB4, PB5, PB6 to output mode(1)
	movs r0, 0b01010101000000
	ldr r1, =GPIOB_MODER
	str r0, [r1]
	// set PB3, PB4, PB5, PB6 to high speed mode
	movs r0, 0b10101010000000
	ldr r1, =GPIOB_OSPEEDR
	str r0, [r1]
	// set the initial light right bulb
	ldr r0, =GPIOB_ODR
	movs r1, 0b11110111
	str r1, [r0]

	// set PC13 to input mode(0)
	ldr r0, =#0xF3FFFF00
	ldr r1, =GPIOC_MODER
	str r0, [r1]
	// set PC0~PC3 to Pull-up(01)
	movs r0, 0b01010101
	ldr r1, =GPIOC_PUDPR
	str r0, [r1]
	// set PC13 1
	movs r0, 0b10000000000000
	ldr r1, =GPIOC_IDR
	str r0, [r1]
	bx lr
Loop:
	//TODO: Write the display pattern into leds variable
	bl Polling_User_Button
	bl Read_DIP_switch_value
	b loop
Polling_User_Button:

Read_DIP_switch_value:

Blink1:

Blink3:

Blink:
	//TODO: blink
	ldr r0, =leds
	ldr r2, [r0]
	ldr r1, =GPIOB_ODR

